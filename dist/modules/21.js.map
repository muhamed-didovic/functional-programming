{"version":3,"sources":["../../modules/21.js"],"names":["Task","require","Db","find","rej","res","setTimeout","id","title","reportHeader","p1","p2","of","ap","fork","console","error","log","reportHeader1"],"mappings":";;AAAA;;AAEA;AACA;;AAEA;AACA,IAAIA,OAAOC,QAAQ,WAAR,CAAX;;AAEA,IAAMC,KAAM;AACVC,QAAM;AAAA,WACJ,IAAIH,IAAJ,CAAS,UAACI,GAAD,EAAMC,GAAN;AAAA,aACPC,WAAW;AAAA,eACTD,IAAI,EAACE,IAAIA,EAAL,EAASC,oBAAkBD,EAA3B,EAAJ,CADS;AAAA,OAAX,EACyC,GADzC,CADO;AAAA,KAAT,CADI;AAAA;AADI,CAAZ;;AAOA,IAAME,eAAe,SAAfA,YAAe,CAACC,EAAD,EAAKC,EAAL;AAAA,sBACRD,GAAGF,KADK,qBACgBG,GAAGH,KADnB;AAAA,CAArB;;AAGA;AACA;AACA;AACA;;AAEA;AACAR,KAAKY,EAAL,CAAQ;AAAA,SAAM;AAAA,WAAMH,aAAaC,EAAb,EAAiBC,EAAjB,CAAN;AAAA,GAAN;AAAA,CAAR,EACGE,EADH,CACMX,GAAGC,IAAH,CAAQ,EAAR,CADN,EAEGU,EAFH,CAEMX,GAAGC,IAAH,CAAQ,CAAR,CAFN,EAGGW,IAHH,CAGQC,QAAQC,KAHhB,EAGuBD,QAAQE,GAH/B;;AAMA;AACA,IAAMC,gBAAgB,SAAhBA,aAAgB;AAAA,SAAM;AAAA,wBAAiBR,GAAGF,KAApB,qBAAyCG,GAAGH,KAA5C;AAAA,GAAN;AAAA,CAAtB;;AAEAR,KAAKY,EAAL,CAAQM,aAAR,EACGL,EADH,CACMX,GAAGC,IAAH,CAAQ,EAAR,CADN,EAEGU,EAFH,CAEMX,GAAGC,IAAH,CAAQ,CAAR,CAFN,EAGGW,IAHH,CAGQC,QAAQC,KAHhB,EAGuBD,QAAQE,GAH/B","file":"21.js","sourcesContent":["// Write applicatives for concurrent actions\n\n//We start with two sequential finds using monads,\n// then rewrite our code to achieve two concurrent finds.\n\n//import Task from 'data.task';\nlet Task = require('data.task');\n\nconst Db = ({\n  find: id =>\n    new Task((rej, res) =>\n      setTimeout(() =>\n        res({id: id, title: `Project ${id}`}), 100))\n})\n\nconst reportHeader = (p1, p2) =>\n  `Report: ${p1.title} compared to ${p2.title}`\n\n//here p2 depends on p1\n// Db.find(20).chain(p1 =>\n//  Db.find(8).map(p2 =>\n//   reportHeader(p1, p2)))\n\n//applicatives used to run parallel p1 and p2\nTask.of(p1 => p2 => reportHeader(p1, p2))\n  .ap(Db.find(20))\n  .ap(Db.find(8))\n  .fork(console.error, console.log)\n\n\n//second approach\nconst reportHeader1 = p1 => p2 => `Report: ${p1.title} compared to ${p2.title}`\n\nTask.of(reportHeader1)\n  .ap(Db.find(20))\n  .ap(Db.find(8))\n  .fork(console.error, console.log)"]}