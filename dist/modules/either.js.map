{"version":3,"sources":["../../modules/either.js"],"names":["Either","require","Maybe","_","messages","lookUp","obj","key","str","fromNullable","Left","r1","map","words","r2","add","a","b","user","name","age","result","property","console","log","toString","s","Right","ss"],"mappings":";;AAAA,IAAIA,SAASC,QAAQ,aAAR,CAAb;AACA,IAAIC,QAAQD,QAAQ,YAAR,CAAZ;AACA,IAAIE,IAAIF,QAAQ,QAAR,CAAR;;AAEA,IAAIG,WAAW;AACb,aAAW;AADE,CAAf;AAGA,IAAIC,SAAS,SAATA,MAAS,CAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC/B,MAAIC,MAAMF,IAAIC,GAAJ,CAAV;AACA,MAAGC,GAAH,EAAQ;AACN,WAAOR,OAAOS,YAAP,CAAoBD,GAApB,CAAP;AACD;AACD,SAAOR,OAAOU,IAAP,CAAY,mBAAZ,CAAP;AACD,CAND;;AAQA;AACA,IAAIC,KAAKN,OAAOD,QAAP,EAAiB,SAAjB,EAA4BQ,GAA5B,CAAgCT,EAAEU,KAAlC,CAAT,C,CAAkD;AAClD;AACA,IAAIC,KAAKT,OAAOD,QAAP,EAAiB,QAAjB,EAA2BQ,GAA3B,CAA+BT,EAAEU,KAAjC,CAAT,C,CAAiD;AACjD;AACA;;AAEA;AACA,SAASE,GAAT,CAAaC,CAAb,EAAgB;AACd,SAAO,UAAUC,CAAV,EAAa;AAClB,WAAOD,IAAIC,CAAX;AACD,GAFD;AAGD;AACD;AACA,IAAIC,OAAO,EAACC,MAAM,eAAP,EAAwBC,KAAK,EAA7B,EAAX;AACA,IAAIC,SAASnB,MAAMO,YAAN,CAAmBS,IAAnB,EACVN,GADU,CACNT,EAAEmB,QAAF,CAAW,KAAX,CADM,EAEVV,GAFU,CAENG,IAAI,CAAJ,CAFM,CAAb;;AAIAQ,QAAQC,GAAR,CAAY,aAAaH,OAAOI,QAAP,EAAzB;;AAEA;AACA,IAAIJ,SAASnB,MAAMO,YAAN,CAAmB,IAAnB,EACVG,GADU,CACNT,EAAEmB,QAAF,CAAW,KAAX,CADM,EAEVV,GAFU,CAENG,IAAI,CAAJ,CAFM,CAAb;;AAIAQ,QAAQC,GAAR,CAAY,aAAaH,OAAOI,QAAP,EAAzB;;AAEA;;;;;;;;AAQA,IAAIC,IAAI1B,OACL2B,KADK,CACCT,IADD,EAELN,GAFK,CAEDT,EAAEmB,QAAF,CAAW,KAAX,CAFC,EAGLV,GAHK,CAGDG,IAAI,CAAJ,CAHC,CAAR;AAIAQ,QAAQC,GAAR,CAAY,EAAZ,EAAgBE,CAAhB;;AAEA,IAAIE,KAAK5B,OACNU,IADM,CACD,IADC,EAENE,GAFM,CAEFT,EAAEmB,QAAF,CAAW,KAAX,CAFE,EAGNV,GAHM,CAGFG,IAAI,CAAJ,CAHE,CAAT;AAIAQ,QAAQC,GAAR,CAAY,GAAZ,EAAiBI,EAAjB","file":"either.js","sourcesContent":["var Either = require('data.either');\nvar Maybe = require('data.maybe');\nvar _ = require('lodash');\n\nvar messages = {\n  'welcome': 'Hello FP!'\n};\nvar lookUp = function (obj, key) {\n  var str = obj[key];\n  if(str) {\n    return Either.fromNullable(str);\n  }\n  return Either.Left('String not found!');\n};\n\n// valid\nvar r1 = lookUp(messages, 'welcome').map(_.words);// Right(['Hello', 'FP!'])\n// invalid\nvar r2 = lookUp(messages, 'badKey').map(_.words);// Left('String not found!');\n// console.log(11, r1.value);\n// console.log(22, r2.value);\n\n// Curried adder\nfunction add(a) {\n  return function (b) {\n    return a + b;\n  }\n}\n// Mapping a valid object over a Maybe\nvar user = {name: 'Haskell Curry', age: 14};\nvar result = Maybe.fromNullable(user)\n  .map(_.property('age'))\n  .map(add(1));\n\nconsole.log('Result: ' + result.toString());\n\n// Mapping null over a Maybe\nvar result = Maybe.fromNullable(null)\n  .map(_.property('age'))\n  .map(add(1));\n\nconsole.log('Result: ' + result.toString());\n\n/*\n TODO: Produce the same program, using an Either.Right for the positive case, and a Either.Left for the negative case\n The outputs should be:\n\n Either.Right(15)\n Either.Left(null)\n */\n\nvar s = Either\n  .Right(user)\n  .map(_.property('age'))\n  .map(add(1));\nconsole.log(11, s);\n\nvar ss = Either\n  .Left(null)\n  .map(_.property('age'))\n  .map(add(1));\nconsole.log(222, ss);"]}