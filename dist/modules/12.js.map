{"version":3,"sources":["../../modules/12.js"],"names":["Task","require","launchMissiles","rej","res","console","log","app","map","x","fork","error","e"],"mappings":"AAAA;;AAEA;AACA;;;AAGA;;;AAGA;;AAEA,IAAIA,OAAOC,QAAQ,WAAR,CAAX;;AAGA,IAAMC,iBAAiB,SAAjBA,cAAiB;AAAA,SACrB,IAAIF,IAAJ,CAAS,UAACG,GAAD,EAAMC,GAAN,EAAc;AACrBC,YAAQC,GAAR,CAAY,kBAAZ;AACAF,QAAI,SAAJ;AACD,GAHD,CADqB;AAAA,CAAvB;;AAMA,IAAMG,MAAML,iBAAiBM,GAAjB,CAAqB;AAAA,SAAKC,IAAI,GAAT;AAAA,CAArB,CAAZ;;AAEAF,IACGC,GADH,CACO;AAAA,SAAKC,IAAI,GAAT;AAAA,CADP,EAEGC,IAFH,CAEQ;AAAA,SAAKL,QAAQM,KAAR,CAAc,KAAd,EAAqBC,CAArB,CAAL;AAAA,CAFR,EAGI;AAAA,SAAKP,QAAQC,GAAR,CAAY,SAAZ,EAAuBG,CAAvB,CAAL;AAAA,CAHJ","file":"12.js","sourcesContent":["//Capture Side Effects in a Task\n\n//We examine the data structure Task, see some constructors, familiar methods,\n// and finally how it captures side effects through laziness.\n\n\n// here is interesting that capture side effects\n\n\n\"use strict\";\n\nvar Task = require('data.task');\n\n\nconst launchMissiles = () =>\n  new Task((rej, res) => {\n    console.log('launch missiles!')\n    res('missile')\n  })\n\nconst app = launchMissiles().map(x => x + '!')\n\napp\n  .map(x => x + '!')\n  .fork(e => console.error('err', e),\n    x => console.log('success', x))"]}