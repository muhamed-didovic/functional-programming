{"version":3,"sources":["../../modules/1.js"],"names":["Box","map","f","x","fold","inspect","nextCharForNumberString","str","s","trim","parseInt","r","i","String","fromCharCode","c","toLowerCase","result","console","log","test","Number","n"],"mappings":";;AAAA;;AAEA,IAAMA,MAAM,SAANA,GAAM;AAAA,SACT;AACCC,SAAK;AAAA,aAAKD,IAAIE,EAAEC,CAAF,CAAJ,CAAL;AAAA,KADN;AAECC,UAAM;AAAA,aAAKF,EAAEC,CAAF,CAAL;AAAA,KAFP;AAGCE,aAAS;AAAA,sBAAaF,CAAb;AAAA;AAHV,GADS;AAAA,CAAZ;;AAOA,IAAMG,0BAA0B,SAA1BA,uBAA0B;AAAA,SAC9BN,IAAIO,GAAJ,EACGN,GADH,CACO;AAAA,WAAKO,EAAEC,IAAF,EAAL;AAAA,GADP,EAEGR,GAFH,CAEO;AAAA,WAAKS,SAASC,CAAT,CAAL;AAAA,GAFP,EAGGV,GAHH,CAGO;AAAA,WAAKW,IAAI,CAAT;AAAA,GAHP,EAIGX,GAJH,CAIO;AAAA,WAAKY,OAAOC,YAAP,CAAoBF,CAApB,CAAL;AAAA,GAJP,EAKGR,IALH,CAKQ;AAAA,WAAKW,EAAEC,WAAF,EAAL;AAAA,GALR,CAD8B;AAAA,CAAhC;;AAQA,IAAMC,SAASX,wBAAwB,QAAxB,CAAf;;AAEAY,QAAQC,GAAR,CAAY,EAAZ,EAAgBF,MAAhB;;AAEA,IAAMG,OAAM,SAANA,IAAM,IAAK;AACf,SAAOpB,IAAIQ,CAAJ,EACJP,GADI,CACA;AAAA,WAAKO,EAAEC,IAAF,EAAL;AAAA,GADA,EAEJR,GAFI,CAEA;AAAA,WAAK,IAAIoB,MAAJ,CAAWC,CAAX,CAAL;AAAA,GAFA,EAGJrB,GAHI,CAGA;AAAA,WAAK,EAAEW,CAAP;AAAA,GAHA,EAIJX,GAJI,CAIA;AAAA,WAAKY,OAAOC,YAAP,CAAoBF,CAApB,CAAL;AAAA,GAJA,EAKJR,IALI,CAKC;AAAA,WAAKW,CAAL;AAAA,GALD,CAAP;AAMD,CAPD;;AASAG,QAAQC,GAAR,CAAY,EAAZ,EAAgBC,KAAK,WAAL,CAAhB","file":"1.js","sourcesContent":["// Code goes here\n\nconst Box = x =>\n  ({\n    map: f => Box(f(x)),\n    fold: f => f(x),\n    inspect: () => `Box(${x})`\n  })\n\nconst nextCharForNumberString = str =>\n  Box(str)\n    .map(s => s.trim())\n    .map(r => parseInt(r))\n    .map(i => i + 1)\n    .map(i => String.fromCharCode(i))\n    .fold(c => c.toLowerCase());\n\nconst result = nextCharForNumberString('  64  ')\n\nconsole.log(11, result)\n\nconst test= s => {\n  return Box(s)\n    .map(s => s.trim())\n    .map(n => new Number(n))\n    .map(i => ++i)\n    .map(i => String.fromCharCode(i))\n    .fold(c => c)\n};\n\nconsole.log(22, test('    65   '));"]}