{"version":3,"sources":["../../modules/19.js"],"names":["Right","chain","f","x","ap","other","map","traverse","of","fold","g","inspect","Left","fromNullable","tryCatch","e","Either","liftA2","fx","fy","$","selector","height","getScreenSize","screen","head","foot","res","console","log"],"mappings":";;AAAA;;AAEA;AACA;;;AAGA;AACA;AACA,IAAMA,QAAQ,SAARA,KAAQ;AAAA,SACX;AACCC,WAAO;AAAA,aAAKC,EAAEC,CAAF,CAAL;AAAA,KADR;AAECC,QAAI;AAAA,aAASC,MAAMC,GAAN,CAAUH,CAAV,CAAT;AAAA,KAFL;AAGCI,cAAU,kBAACC,EAAD,EAAKN,CAAL;AAAA,aAAWA,EAAEC,CAAF,EAAKG,GAAL,CAASN,KAAT,CAAX;AAAA,KAHX;AAICM,SAAK;AAAA,aAAKN,MAAME,EAAEC,CAAF,CAAN,CAAL;AAAA,KAJN;AAKCM,UAAM,cAACP,CAAD,EAAIQ,CAAJ;AAAA,aAAUA,EAAEP,CAAF,CAAV;AAAA,KALP;AAMCQ,aAAS;AAAA,wBAAeR,CAAf;AAAA;AANV,GADW;AAAA,CAAd;;AAUA,IAAMS,OAAO,SAAPA,IAAO;AAAA,SACV;AACCX,WAAO;AAAA,aAAKW,KAAKT,CAAL,CAAL;AAAA,KADR;AAECC,QAAI;AAAA,aAASQ,KAAKT,CAAL,CAAT;AAAA,KAFL;AAGCI,cAAU,kBAACC,EAAD,EAAKN,CAAL;AAAA,aAAWM,GAAGI,KAAKT,CAAL,CAAH,CAAX;AAAA,KAHX;AAICG,SAAK;AAAA,aAAKM,KAAKT,CAAL,CAAL;AAAA,KAJN;AAKCM,UAAM,cAACP,CAAD,EAAIQ,CAAJ;AAAA,aAAUR,EAAEC,CAAF,CAAV;AAAA,KALP;AAMCQ,aAAS;AAAA,uBAAcR,CAAd;AAAA;AANV,GADU;AAAA,CAAb;;AAUA,IAAMU,eAAe,SAAfA,YAAe;AAAA,SAAKV,MAAM,IAAN,GAAaH,MAAMG,CAAN,CAAb,GAAwBS,KAAK,IAAL,CAA7B;AAAA,CAArB;;AAEA,IAAME,WAAW,SAAXA,QAAW,IAAK;AACpB,MAAI;AACF,WAAOd,MAAME,GAAN,CAAP;AACD,GAFD,CAEE,OAAMa,CAAN,EAAS;AACT,WAAOH,KAAKG,CAAL,CAAP;AACD;AACF,CAND;;AAQA,IAAMC,SAAS;AACbR,MAAKR,KADQ;AAEbc,oBAFa;AAGbD;AAHa,CAAf;AAKA;;AAEA;AACA,IAAMI,SAAS,SAATA,MAAS,CAACf,CAAD,EAAIgB,EAAJ,EAAQC,EAAR;AAAA,SAAeD,GAAGZ,GAAH,CAAOJ,CAAP,EAAUE,EAAV,CAAae,EAAb,CAAf;AAAA,CAAf;;AAEA,IAAMC,IAAI,SAAJA,CAAI;AAAA,SAAYJ,OAAOR,EAAP,CAAU,EAACa,kBAAD,EAAWC,QAAQ,EAAnB,EAAV,CAAZ;AAAA,CAAV;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAMC,gBAAgB,SAAhBA,aAAgB;AAAA,SAAU;AAAA,WAAQ;AAAA,aACxCC,UAAUC,KAAKH,MAAL,GAAcI,KAAKJ,MAA7B,CADwC;AAAA,KAAR;AAAA,GAAV;AAAA,CAAtB;AAEA;AACA;AACA;;AAEA;AACA,IAAMK,MAAMV,OAAOM,cAAc,GAAd,CAAP,EAA2BH,EAAE,QAAF,CAA3B,EAAwCA,EAAE,QAAF,CAAxC,CAAZ;;AAEAQ,QAAQC,GAAR,CAAYF,IAAIhB,OAAJ,EAAZ","file":"19.js","sourcesContent":["//Apply multiple functors as arguments to a function (Applicatives)\n\n//We find a couple of DOM nodes that may or may not exist and\n// run a calculation on the page height using applicatives.\n\n\n// Definition for Either(Right and Left)\n// -------------------------------------\nconst Right = x =>\n  ({\n    chain: f => f(x),\n    ap: other => other.map(x),\n    traverse: (of, f) => f(x).map(Right),\n    map: f => Right(f(x)),\n    fold: (f, g) => g(x),\n    inspect: () => `Right(${x})`\n  })\n\nconst Left = x =>\n  ({\n    chain: f => Left(x),\n    ap: other => Left(x),\n    traverse: (of, f) => of(Left(x)),\n    map: f => Left(x),\n    fold: (f, g) => f(x),\n    inspect: () => `Left(${x})`\n  })\n\nconst fromNullable = x => x !== null ? Right(x) : Left(null)\n\nconst tryCatch = f => {\n  try {\n    return Right(f())\n  } catch(e) {\n    return Left(e)\n  }\n}\n\nconst Either = {\n  of:  Right,\n  tryCatch,\n  fromNullable\n}\n// -------------------------------------\n\n// Lesson code\nconst liftA2 = (f, fx, fy) => fx.map(f).ap(fy)\n\nconst $ = selector => Either.of({selector, height: 10})\n\n//old way\n//const getScreenSize1 = (screen, head, foot) => screen - (head.height + foot.height)\n\n//1st way:\n// $('header').map(head =>\n//   $('footer').map(footer => ...))\n\n//2nd way: still not good because it is sequential\n// $('header').chain(head =>\n//   $('footer').map(footer =>\n//     getScreenSize1(800, head, footer)))\n\n//3rd way: use applicative, we use getScreenSize1 from above\n//const res = Either.if(header => footer =>  getScreenSize1(800, head, footer))\n\n//4th way, curried:\nconst getScreenSize = screen => head => foot =>\nscreen - (head.height + foot.height)\n//const res = Eihter.of(getScreenSize(800))\n//              .ap($('header))\n//              .ap($('footer'))\n\n//5th waf wift liftA2:\nconst res = liftA2(getScreenSize(800), $('header'), $('footer'))\n\nconsole.log(res.inspect())\n"]}