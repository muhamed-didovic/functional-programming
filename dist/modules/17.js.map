{"version":3,"sources":["../../modules/17.js"],"names":["add1","x","y","inc1","console","log","add","inc","modulo","dvd","dvr","isOdd","replace","str","regex","repl","filter","xs","pred","map","f","censor","censorAll","getAllOdds"],"mappings":";;AAAA;;AAEA;AACA,IAAMA,OAAO,SAAPA,IAAO,CAACC,CAAD,EAAIC,CAAJ;AAAA,SAAUD,IAAI,CAAd;AAAA,CAAb;AACA,IAAME,OAAO,SAAPA,IAAO;AAAA,SAAMH,KAAK,CAAL,EAAQE,CAAR,CAAN;AAAA,CAAb;AACAE,QAAQC,GAAR,CAAY,iBAAZ,EAA+BF,KAAK,CAAL,CAA/B;;AAGA;AACA;AACA,IAAMG,MAAM,SAANA,GAAM;AAAA,SAAK;AAAA,WAAKL,IAAI,CAAT;AAAA,GAAL;AAAA,CAAZ,C,CAA4B;AAC5B,IAAMM,MAAMD,IAAI,CAAJ,CAAZ;;AAEA;AACA;AACA;;AAEA;AACA,IAAME,SAAS,SAATA,MAAS;AAAA,SAAO;AAAA,WAAOC,MAAMC,GAAb;AAAA,GAAP;AAAA,CAAf;AACA,IAAMC,QAAQH,OAAO,CAAP,CAAd;;AAEA;AACA,IAAMI,UAAU,SAAVA,OAAU;AAAA,SAAS;AAAA,WAAQ;AAAA,aAC/BC,IAAID,OAAJ,CAAYE,KAAZ,EAAmBC,IAAnB,CAD+B;AAAA,KAAR;AAAA,GAAT;AAAA,CAAhB;;AAGA;AACA,IAAMC,SAAS,SAATA,MAAS;AAAA,SAAQ;AAAA,WAAMC,GAAGD,MAAH,CAAUE,IAAV,CAAN;AAAA,GAAR;AAAA,CAAf;AACA,IAAMC,MAAM,SAANA,GAAM;AAAA,SAAK;AAAA,WAAMF,GAAGE,GAAH,CAAOC,CAAP,CAAN;AAAA,GAAL;AAAA,CAAZ;;AAEA,IAAMC,SAAST,QAAQ,WAAR,EAAqB,GAArB,CAAf;;AAEA,IAAMU,YAAYH,IAAIE,MAAJ,CAAlB;;AAEA,IAAME,aAAaP,OAAOL,KAAP,CAAnB;;AAEAP,QAAQC,GAAR,CAAY,aAAZ,EAA2BiB,UAAU,CAAC,OAAD,EAAU,OAAV,CAAV,CAA3B;AACAlB,QAAQC,GAAR,CAAY,cAAZ,EAA4BkB,WAAW,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,CAAX,CAA5B","file":"17.js","sourcesContent":["//curried functions, split arguments into functions and use 'data' argument last\n\n//1st intration:\nconst add1 = (x, y) => x + 1\nconst inc1 = y  => add1(1, y)\nconsole.log('first iteration', inc1(2));\n\n\n// better technique\n//const add = x => (y => x + 1)\nconst add = x => y => x + 1 // (y => 1 + y)\nconst inc = add(1)\n\n//bad way\n//const modulo = (dvr, dvd) => dvd % dvr\n//const isOdd = dvd => modulo(2, dvd)\n\n//better way\nconst modulo = dvr => dvd => dvd % dvr\nconst isOdd = modulo(2)\n\n//we give data last\nconst replace = regex => repl => str =>\n  str.replace(regex, repl)\n\n//first we give method and data is the last, so always give your data last\nconst filter = pred => xs => xs.filter(pred)\nconst map = f => xs => xs.map(f)\n\nconst censor = replace(/[aeiou]/ig)('*')\n\nconst censorAll = map(censor)\n\nconst getAllOdds = filter(isOdd)\n\nconsole.log(\"censorAll: \", censorAll(['hello', 'world']))\nconsole.log(\"getAllOdds: \", getAllOdds([1,2,3,4]))\n"]}