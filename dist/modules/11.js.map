{"version":3,"sources":["../../modules/11.js"],"names":["LazyBox","fold","f","g","map","result","abba","trim","Number","trimmed","number","String","fromCharCode","x","toLowerCase","console","log"],"mappings":";;AAAA;;AAEA;AACA;AACA;;;AAGA,IAAMA,UAAU,SAAVA,OAAU;AAAA,SACb;AACCC,UAAM;AAAA,aAAKC,EAAEC,GAAF,CAAL;AAAA,KADP;AAECC,SAAK;AAAA,aAAKJ,QAAQ;AAAA,eAAME,EAAEC,GAAF,CAAN;AAAA,OAAR,CAAL;AAAA;AAFN,GADa;AAAA,CAAhB;;AAMA,IAAME,SAASL,QAAQ;AAAA,SAAM,OAAN;AAAA,CAAR,EACZI,GADY,CACR;AAAA,SAAQE,KAAKC,IAAL,EAAR;AAAA,CADQ,EAEZH,GAFY,CAER;AAAA,SAAW,IAAII,MAAJ,CAAWC,OAAX,CAAX;AAAA,CAFQ,EAGZL,GAHY,CAGR;AAAA,SAAUM,SAAS,CAAnB;AAAA,CAHQ,EAIZN,GAJY,CAIR;AAAA,SAAKO,OAAOC,YAAP,CAAoBC,CAApB,CAAL;AAAA,CAJQ,EAKZZ,IALY,CAKP;AAAA,SAAKY,EAAEC,WAAF,EAAL;AAAA,CALO,CAAf;;AAOAC,QAAQC,GAAR,CAAYX,MAAZ","file":"11.js","sourcesContent":["// Delay Evaluation with LazyBox\n\n//We want to convert our value that's right there, our concrete value,\n// to a function that will eventually return our value.\n//Sometimes this is referred to as a Church encoding\n\n\nconst LazyBox = g =>\n  ({\n    fold: f => f(g()),\n    map: f => LazyBox(() => f(g()))\n  })\n\nconst result = LazyBox(() => '  64 ')\n  .map(abba => abba.trim())\n  .map(trimmed => new Number(trimmed))\n  .map(number => number + 1)\n  .map(x => String.fromCharCode(x))\n  .fold(x => x.toLowerCase())\n\nconsole.log(result)\n"]}