{"version":3,"sources":["../../modules/7.js"],"names":["require","List","Map","Sum","x","concat","y","inspect","All","First","acct1","name","isPaid","points","friends","acct2","res","console","log","toJS"],"mappings":";;eAAoBA,QAAQ,eAAR,C;IAAbC,I,YAAAA,I;IAAMC,G,YAAAA,G,EAAgC;;AAE7C,IAAMC,MAAM,SAANA,GAAM;AAAA,SACT;AACCC,QADD;AAECC,YAAQ;AAAA,UAAKC,CAAL,QAAEF,CAAF;AAAA,aACND,IAAIC,IAAIE,CAAR,CADM;AAAA,KAFT;AAICC,aAAS;AAAA,sBACAH,CADA;AAAA;AAJV,GADS;AAAA,CAAZ;;AASA,IAAMI,MAAM,SAANA,GAAM;AAAA,SACT;AACCJ,QADD;AAECC,YAAQ;AAAA,UAAKC,CAAL,SAAEF,CAAF;AAAA,aACNI,IAAIJ,KAAKE,CAAT,CADM;AAAA,KAFT;AAICC,aAAS;AAAA,sBACAH,CADA;AAAA;AAJV,GADS;AAAA,CAAZ;;AASA,IAAMK,QAAQ,SAARA,KAAQ;AAAA,SACX;AACCL,QADD;AAECC,YAAQ;AAAA,aACNI,MAAML,CAAN,CADM;AAAA,KAFT;AAICG,aAAS;AAAA,wBACEH,CADF;AAAA;AAJV,GADW;AAAA,CAAd;;AASA,IAAMM,QAAQR,IAAI,EAAES,MAAMF,MAAM,MAAN,CAAR,EAAuBG,QAAQJ,IAAI,IAAJ,CAA/B,EAA0CK,QAAQV,IAAI,EAAJ,CAAlD,EAA2DW,SAAS,CAAC,UAAD,CAApE,EAAJ,CAAd;;AAEA,IAAMC,QAAQb,IAAI,EAAES,MAAMF,MAAM,MAAN,CAAR,EAAuBG,QAAQJ,IAAI,KAAJ,CAA/B,EAA2CK,QAAQV,IAAI,CAAJ,CAAnD,EAA2DW,SAAS,CAAC,QAAD,CAApE,EAAJ,CAAd;;AAEA,IAAME,MAAMN,MAAML,MAAN,CAAaU,KAAb,CAAZ;;AAEA;AACAE,QAAQC,GAAR,CAAY,YAAZ,EAA0BF,IAAIG,IAAJ,GAAWL,OAAX,CAAmB,CAAnB,CAA1B;AACAG,QAAQC,GAAR,CAAY,YAAZ,EAA0BF,IAAIG,IAAJ,GAAWL,OAAX,CAAmB,CAAnB,CAA1B;AACAG,QAAQC,GAAR,CAAY,UAAZ,EAAwBF,IAAIG,IAAJ,GAAWP,MAAnC,EAA2CI,IAAIG,IAAJ,GAAWP,MAAX,CAAkBR,CAA7D;AACAa,QAAQC,GAAR,CAAY,QAAZ,EAAsBF,IAAIG,IAAJ,GAAWR,IAAjC,EAAuCK,IAAIG,IAAJ,GAAWR,IAAX,CAAgBP,CAAvD;AACAa,QAAQC,GAAR,CAAY,UAAZ,EAAwBF,IAAIG,IAAJ,GAAWN,MAAX,CAAkBT,CAA1C;AACAa,QAAQC,GAAR,CAAYF,GAAZ","file":"7.js","sourcesContent":["const {List, Map} = require('immutable-ext');//Immutable;\n\nconst Sum = x =>\n  ({\n    x,\n    concat: ({x: y}) =>\n      Sum(x + y),\n    inspect: () =>\n      `Sum(${x})`\n  })\n\nconst All = x =>\n  ({\n    x,\n    concat: ({x: y}) =>\n      All(x && y),\n    inspect: () =>\n      `All(${x})`\n  })\n\nconst First = x =>\n  ({\n    x,\n    concat: _ =>\n      First(x),\n    inspect: () =>\n      `First(${x})`\n  })\n\nconst acct1 = Map({ name: First('Nico'), isPaid: All(true), points: Sum(10), friends: ['Franklin'] })\n\nconst acct2 = Map({ name: First('Nico'), isPaid: All(false), points: Sum(2), friends: ['Gatsby'] })\n\nconst res = acct1.concat(acct2)\n\n// Showing results\nconsole.log(\"Friend 1: \", res.toJS().friends[0])\nconsole.log(\"Friend 2: \", res.toJS().friends[1])\nconsole.log(\"isPaid: \", res.toJS().isPaid, res.toJS().isPaid.x)\nconsole.log(\"Name: \", res.toJS().name, res.toJS().name.x)\nconsole.log(\"Points: \", res.toJS().points.x)\nconsole.log(res);\n\n\n\n\n\n"]}